@page "/playwright"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http

<PageTitle>Test Playwright</PageTitle>

<h1>Playwright Data Grid</h1>

<p>This component demonstrates Playwright testing.</p>

@if (playwrightData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <label>Min Range:</label> &nbsp;
        <input type="text" id="txtMin" @bind="minValue" placeholder="Min value" />&nbsp;&nbsp;
        <label>Max Range:</label> &nbsp;
        <input type="text" id="txtMax" @bind="maxValue" placeholder="Max value" /> &nbsp;&nbsp;
        <button class="btn btn-primary" @onclick="GetRandomData">Retrieve Data</button>
        
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Random Value</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in playwrightData)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.RandomValue</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private PlaywrightData[]? playwrightData;
    private HttpClient client;
    private int minValue { get; set; }
    private int maxValue { get; set; }
    //private string apiURL = "https://localhost:7112/Playwright?startRange={minValue}&endRange={maxValue}";

    protected override async Task OnInitializedAsync()
    {
        playwrightData = await Http.GetFromJsonAsync<PlaywrightData[]>("sample-data/weather.json");
        //playwrightData = null;
    }

    protected async Task GetRandomData() {
       playwrightData = await Http.GetFromJsonAsync<PlaywrightData[]>($"https://localhost:7112/Playwright?startRange={minValue}&endRange={maxValue}");
    }

    public class PlaywrightData
    {
        public DateTime Date { get; set; }
        public int RandomValue { get; set; }
        public string? Summary { get; set; }
    }
}
}
